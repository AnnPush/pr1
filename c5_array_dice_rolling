/*Напишите программу на С, которая моделирует бросание двух игральных костей.
Программа должна вызывать функцию rand для "бросания" первой кости и затем эту же функцию для 
"бросания" второй. Затем должна быть вычислена сумма двух значений. 
(Замечание: поскольку на каждой кости может выпадать целое значение от 1 до 6, то 
сумма двух значений может изменяться от 2 до 12, при этом 7 будет наиболее часто
встречающейся суммой, а 2 и 12 - встречающимися наименее часто). 
36 возможных комбинаций для двух костей. 
[1][1] = 2; [1][2] = 3; [1][3] = 4; [1][4] = 5; [1][5] = 6; [1][6] = 7;
[2][1] = 3; [2][2] = 4; [2][3] = 5; [2][4] = 6; [2][5] = 7; [2][6] = 8;
[3][1] = 4; [3][2] = 5; [3][3] = 6; [3][4] = 7; [3][5] = 8; [3][6] = 9;
[4][1] = 5; [4][2] = 6; [4][3] = 7; [4][4] = 8; [4][5] = 9; [4][6] = 10;
[5][1] = 6; [5][2] = 7; [5][3] = 8; [5][4] = 9; [5][5] = 10; [5][6] = 11;
[6][1] = 7; [6][2] = 8; [6][3] = 9; [6][4] = 10; [6][5] = 11; [6][6] = 12.

Программа должна бросить две кости 36 000 раз. Используйте одномерный массив
для подсчета числа появлений каждой из возможных сумм. Выведите результат в 
табличной форме. Также определите, являются ли итоговые суммы правлоподобными,
т. е. поскольку для выбрасывания 7 существует 6 способов, то все выбрасывания
7 должны составить приблизительно одну шестую.
*/






#include <stdio.h>
#define SIZE 12

int main(void)
{
	int a[SIZE] = {1, 3, 5, 4, 7, 2, 99, 12, 54, 34, 3, 4};
	int total = 0;

	for (size_t i = 0; i < SIZE; ++i)
	{
		total += a[i];
	}
	printf("Total of array element values is %d\n", total);
}
