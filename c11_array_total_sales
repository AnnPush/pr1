/*
Используйте двумерный массив для решения следующей задачи. В компании
работают четыре продавца(с 1 по 4), которые продают пять различных видов
изделий (с 1 по 5). Один раз в день каждый продавец передает в компанию 
карточку сбыта по каждой разновидности проданного товара. Каждая карточка
содержит:
1. Номер продавца
2. Номер изделия
3. Общую сумму в долларах за данный товар, проданный в этот день.
Таким образом, каждый продавец передает в день от 0 до 5 карточек сбыта.
Предположим, что доступна информация по всем карточкам за последний месяц.
Напишите программу, которая будет считывать всю информацию о сбыте
за последний месяц и подводить общий итог о сбыте каждыи продавцом каждой
разновидности товара. Все итоговые суммы должны храниться в двумерном массиве sales.
После обработки всей информации за последний месяц выведите результат в виде 
таблицы, в которой каждый столбец представляет конкретного продавца и каждая
строка представляет конкретную разновидность товара. Для получения общего сбыта
каждой разновидности товара за последний месяц просуммируйте каждую строку;
для получения общего сбыта для каждого продавца за последний месяц проведите
суммирование каждого столбца. Распечатка вашей таблицв должна включать эти 
перекрестные итоговые суммы справа от итоговых строк в нижней части итоговых столбцов.
*/


#include <stdio.h>
#include <stdlib.h>
#define SALESPERSON 4
#define PRODUCT 5

void printArray(int a[][SALESPERSON],  int goods, int people);

int main(void)
{
	int sales[PRODUCT][SALESPERSON] = {0};
	srand(time(NULL));
	
	for(int m = 0; m < 30; m++)
	{

	for ( int i = 0; i < PRODUCT; i++ )
	{
		for ( int j = 0; j < SALESPERSON; j++ )
		{
			sales[i][j] = sales[i][j] + (10 + rand()%20);
		}
	}
	}

	printf("The array is:\n");
	printArray(sales, SALESPERSON, PRODUCT);
}
void printArray(int a[][SALESPERSON], int goods, int people)
{
   printf("%s", "salesperson   [1]  [2]  [3]  [4]  [5]");
  
   for ( int i = 0; i < goods; i++ )
	{
	   printf("\nproduct[%d]    ", i + 1);

	   for ( int j = 0; j < people; j++ )
	   {
	      printf( "%-5d", a[i][j]);
	   }
	}
}
